    %% SEIR Model ODE Equations using non-homogenous coverages

function Xdot = Yaws_ODE_FileV2(t,X) 


global  rho ...
        betaONE ...
        betaTWO ... 
        mu ...
        alpha1 ...
        alpha2 ...
        gamma1 ...
        gamma2 ...
        proportion ...
        epsilon ...
        eta ...
        theta ...
        psi...
        lambda ...
        phi1a...
        phi2a...
        phi3a...
        phi4a...
        phi1b...
        phi2b...
        phi3b...
        phi4b...
        Ef...
        chi1...
        chi2...
        Rphi1a...
        Rphi2a...
        Rphi3a...
        Rphi4a...
        Rphi1b...
        Rphi2b...
        Rphi3b...
        Rphi4b...
        cov1...
        cov2...
        cov3...
        cov4...
        cov5...
        cov6...
        cov7...
        cov8...
        cov9...
%% assign compartment names

% These refer to my compartments

S = X(1);
E = X(2);
IP1 = X(3);
IP2 = X(4);
L1 = X(5);
IS = X(6);
L2 = X(7);
IT = X(8);
R = X(9);

%% ODEs

Xdot = zeros(size(X));  
Ntot = S + E + IP1 + IP2 + L1 + IS + L2 + IT + R;

Force = (betaONE*(IP1+IP2)+betaTWO*IS)/Ntot;


% Differential equations:

%dS/dt
Xdot(1) = (rho*Ntot) + (Ef*Rphi1a * cov2 *E) + (Ef*Rphi2a* cov3 *IP1) + (Ef*Rphi2a* cov4 *IP2)  + (Ef*Rphi3a*cov5*IS) + (Ef*Rphi2a*cov6*L1) + (Ef*Rphi3a*cov7*L2) + (Ef*Rphi4a*cov8*IT) - (S*Force) - (mu*S);
 
%dE/dt 
Xdot(2) = (S*Force) - (Ef*Rphi1a* cov2 *E) - alpha1*E - alpha2*E - (mu*E);
 
%dIP1/dt 
Xdot(3) = (alpha1*E) - (Ef*Rphi2a *cov3 *IP1) - (gamma1*IP1) - (Ef*(Rphi2b)* cov3 *IP1) - mu*IP1;

%dIP2/dt
Xdot(4) = (alpha2*E) - (Ef*Rphi2a* cov4 *IP2)  - (gamma2*IP2) - (Ef*(Rphi2b)* cov4 *IP2) - mu*IP2;

%dL1/dt
Xdot(5) = (gamma2*IP2) - (Ef*Rphi2a* cov6 *L1) - (Ef*(Rphi2b)* cov6 *L1) - epsilon*L1 - mu*L1;

%dIS/dt
Xdot(6) = eta*L2  + gamma1*IP1 + epsilon*L1 - (Ef*Rphi3a* cov5 *IS) - (Ef*(Rphi3b)* cov5 *IS) - theta*IS - (mu*IS);
 
%dL2/dt
Xdot(7) = theta*IS - lambda*L2 - eta*L2 - psi*L2 - (Ef*Rphi3a* cov7 *L2) - (Ef*(Rphi3b)* cov7 *L2) - (mu*L2);
 
%dIT/dt
Xdot(8) = lambda*L2 - (Ef*Rphi4a* cov8 *IT) - (Ef*(Rphi4b)* cov8 *IT) - mu*IT;

%dR/dt
Xdot(9) = psi*L2 + (Ef*(Rphi4b)* cov8 *IT) + (Ef*(Rphi3b)* cov7 *L2) + (Ef*(Rphi3b) * cov5 *IS) + (Ef*(Rphi2b)* cov6 *L1) + (Ef*(Rphi2b)* cov3 *IP1) + (Ef*(Rphi2b)* cov3 *IP1) - (mu*R);
 
end